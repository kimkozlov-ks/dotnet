@using DataModel;
@model List<ComponentSettings>

<h2>Settings</h2>
<div id="settings-container" class="container p-3 my-3 border">
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxPhone" value="option1" checked>
        <label class="form-check-label" for="inlineCheckboxPhone">Enable/disable column "Phone"</label>
    </div>
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxGender" value="option2" checked>
        <label class="form-check-label" for="inlineCheckboxGender">Enable/disable column "Gender"</label>
        <div id="gender-radio-container" class="d-none">
            <div class="form-check">
                <label class="form-check-label">
                    <input type="radio" class="form-check-input" name="genderradio">Male
                </label>
            </div>
            <div class="form-check">
                <label class="form-check-label">
                    <input type="radio" class="form-check-input" name="genderradio">Female
                </label>
            </div>
            <div class="form-check">
                <label class="form-check-label">
                    <input type="radio" class="form-check-input" name="genderradio" checked>Any
                </label>
            </div>
        </div>
    </div>
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxCity" value="option3" checked>
        <label class="form-check-label" for="inlineCheckboxCity">Enable/disable column "City"</label>
    </div>
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxStreet" value="option4" checked>
        <label class="form-check-label" for="inlineCheckboxStreet">Enable/disable column "Street"</label>
    </div>
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxEmail" value="option5" checked>
        <label class="form-check-label" for="inlineCheckboxEmail">Enable/disable column "Email"</label>
    </div>
    <div>
        <button id="confirm-button" type="button" class="btn btn-outline-secondary">Confirm</button>
    </div>
</div>

@(Html.DevExtreme().DataGrid<User>()
                .ID("gridContainer")
                .ShowBorders(true)
                .DataSource(d => d.Mvc().Controller("DataGrid").LoadAction("Get").Key("Phone"))
                .Columns(columns =>
                {
                    columns.AddFor(m => m.Picture).Width(60)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                            <div>
                                <img src="<%- value %>" alt="" />
                            </div>
                    </text>);
         columns.AddFor(m => m.Name);
         columns.AddFor(m => m.Gender).Visible(Model[1].IsChecked);
         columns.AddFor(m => m.Phone).Visible(Model[0].IsChecked);
     })
.Paging(p => p.PageSize(25))
.FilterRow(f => f.Visible(true))
.HeaderFilter(f => f.Visible(true))
.GroupPanel(p => p.Visible(true))
.StateStoring(s => s
.Enabled(true)
.Type(StateStoringType.LocalStorage)
.StorageKey("storage"))
.Grouping(g => g.AutoExpandAll(true))
.RemoteOperations(true)
.ColumnAutoWidth(true)
.Summary(s => s
.TotalItems(totalItems =>
{
 totalItems.AddFor(m => m.Phone).SummaryType(SummaryType.Count);
})
.GroupItems(groupItems =>
{
 groupItems.Add().SummaryType(SummaryType.Count);
}))
.MasterDetail(md =>
{

 if (Model[2].IsChecked || Model[3].IsChecked || Model[4].IsChecked)
 {
     md.Enabled(true);
     md.Template(@<text>
                                        @(Html.DevExtreme().DataGrid<User>()
                                          .ColumnAutoWidth(true)
                                          .ShowBorders(true)
                                          .Columns(columns =>
                                          {
                                              columns.AddFor(m => m.City).Visible(Model[2].IsChecked);

                                              columns.AddFor(m => m.Street).Visible(Model[3].IsChecked);

                                              columns.AddFor(m => m.Email).Visible(Model[4].IsChecked);

                                              //columns.Add()
                                              //    .Caption("Completed")
                                              //    .DataType(GridColumnDataType.Boolean)
                                              //    .CalculateCellValue(@"function(rowData) { return rowData.Status == ""Completed""; }");
                                          })
                                          .DataSource(d => d.Mvc()
                                              .Controller("MasterDetail")
                                              .LoadAction("GetDetails")
                                              .LoadParams(new { phone = new JS("data.Phone") })
                                          )
                                        ) </text>);

           }
       }
   )
)

<script src="~/js/SettingsComponent.js"></script>