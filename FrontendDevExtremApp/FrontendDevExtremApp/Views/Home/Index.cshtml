@using DataModel;
@model ComponentSettings

<h2>Settings</h2>
<div id="settings-container" class="container p-3 my-3 border">
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxPhone" value="option1" checked>
        <label class="form-check-label" for="inlineCheckboxPhone">Enable/disable column "Phone"</label>
    </div>
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxGender" value="option2" checked>
        <label class="form-check-label" for="inlineCheckboxGender">Enable/disable column "Gender"</label>
        <div id="gender-radio-container" class="d-none">
            <div class="form-check">
                <label class="form-check-label">
                    <input type="radio" class="form-check-input" id="radio-gender-male" name="genderradio" value="1">Male
                </label>
            </div>
            <div class="form-check">
                <label class="form-check-label">
                    <input type="radio" class="form-check-input" id="radio-gender-female" name="genderradio" value="2">Female
                </label>
            </div>
            <div class="form-check">
                <label class="form-check-label">
                    <input type="radio" class="form-check-input" id="radio-gender-any" name="genderradio" checked value="0">Any
                </label>
            </div>
        </div>
    </div>
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxCity" value="option3" checked>
        <label class="form-check-label" for="inlineCheckboxCity">Enable/disable column "City"</label>
    </div>
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxStreet" value="option4" checked>
        <label class="form-check-label" for="inlineCheckboxStreet">Enable/disable column "Street"</label>
    </div>
    <div class="form-check form-group">
        <input class="form-check-input" type="checkbox" id="checkboxEmail" value="option5" checked>
        <label class="form-check-label" for="inlineCheckboxEmail">Enable/disable column "Email"</label>
    </div>
    <div>
        <button id="confirm-button" type="button" class="btn btn-outline-secondary">Confirm</button>
    </div>
</div>

@(Html.DevExtreme().DataGrid<User>()
                .ID("gridContainer")
                .ShowBorders(true)
                .DataSource(d => d.Mvc().Controller("DataGrid").LoadAction("Get").Key("Name"))
                .Columns(columns =>
                {
                    columns.AddFor(m => m.Picture).Width(60)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                            <div>
                                <img src="<%- value %>" alt="" />
                            </div>
                    </text>);
             columns.AddFor(m => m.Name);

             if (Model.IsGender)
                 columns.AddFor(m => m.Gender);

             if (Model.IsPhone)
                 columns.AddFor(m => m.Phone);
         })
.Paging(p => p.PageSize(25))
.FilterRow(f => f.Visible(true))
.HeaderFilter(f => f.Visible(true))
.GroupPanel(p => p.Visible(true))
.StateStoring(s => s
.Enabled(true)
.Type(StateStoringType.LocalStorage)
.StorageKey("storage"))
.Grouping(g => g.AutoExpandAll(true))
.RemoteOperations(true)
.ColumnAutoWidth(true)
.Summary(s => s
.TotalItems(totalItems =>
    {
        totalItems.AddFor(m => m.Name).SummaryType(SummaryType.Count);
    })
.GroupItems(groupItems =>
    {
        groupItems.Add().SummaryType(SummaryType.Count);
    }))
.MasterDetail(md =>
{

if (Model.IsCity || Model.IsStreet || Model.IsEmail)
{
 md.Enabled(true);
 md.Template(@<text>
                                @(Html.DevExtreme().DataGrid<User>()
                                 .ColumnAutoWidth(true)
                                 .ShowBorders(true)
                                 .Columns(columns =>
                                 {
                                   if (Model.IsCity)
                                       columns.AddFor(m => m.City);

                                   if (Model.IsStreet)
                                       columns.AddFor(m => m.Street);
                                   if (Model.IsEmail)
                                       columns.AddFor(m => m.Email);
                                        })
                                 .DataSource(d => d.Mvc()
                                     .Controller("MasterDetail")
                                     .LoadAction("GetDetails")
                                     .LoadParams(new { name = new JS("data.Name") })
                                 )
                                ) </text>);
}}))

<script src="~/js/SettingsComponent.js"></script>